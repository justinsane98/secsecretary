{"version":3,"sources":["webpack:///./src/components/Admin.js","webpack:///./src/components/InvestorAlerts.js","webpack:///./src/components/Footer.js","webpack:///./src/components/CorporateFinance.js","webpack:///./src/components/ProposedRules.js","webpack:///./src/components/News.js","webpack:///./src/components/Speeches.js","webpack:///./src/components/Testimony.js","webpack:///./src/components/Feeds.js","webpack:///./src/components/TradingSuspensions.js","webpack:///./src/components/Litigation.js","webpack:///./src/components/Statements.js","webpack:///./src/components/Header.js","webpack:///./src/components/InvestmentManagement.js","webpack:///./public/images/$hearer.png"],"names":["Admin","startDate","endDate","message","data","useStaticQuery","months","feed","allFeedAdmin","nodes","forEach","entry","i","entryDay","pubDate","split","entryMonth","entryYear","entryTime","entryMinute","entryHour","content","replaceAll","entryDate","Date","findIndex","element","includes","setHours","push","className","key","title","href","link","length","InvestorAlerts","allFeedInvestorAlerts","Footer","props","archives","src","QR","alt","CorporateFinance","allFeedCorporateFinance","ProposedRules","allFeedProposedRules","News","allFeedNews","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Speeches","allFeedSpeeches","Testimony","allFeedTestimony","Feeds","start","end","TradingSuspensions","allFeedTradingSuspensions","Litigation","allFeedLitigation","Statements","allFeedStatements","Header","InvestmentManagement","allFeedInvestmentManagement","module","exports"],"mappings":"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","file":"dec819f73ac36cdaa0c8bb8c8a81c61e4289c96b-414a34b2eb9925de2171.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Admin = ({startDate, endDate, message}) => {\n\n  const data = useStaticQuery(graphql`\n  {\n    allFeedAdmin {\n      nodes {\n        content\n        title\n        pubDate\n        link\n      }\n    }\n  }\n`)\n\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n\n  let feed = [];\n  let nodes = data.allFeedAdmin.nodes;\n\n  nodes.forEach(function(entry, i) {\n    let entryDay = entry.pubDate.split(\" \")[1]\n    let entryMonth = entry.pubDate.split(\" \")[2]\n    let entryYear = entry.pubDate.split(\" \")[3]\n    var entryTime = entry.pubDate.split(\" \")[4]\n    var entryMinute = entryTime.split(\":\")[1]\n    var entryHour = entryTime.split(\":\")[0]\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\n  \n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \n      feed.push (\n        <li className=\"py-4\" key={entry.title + i}>\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\n          <p className=\"opacity-90\">{content}</p>\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\n        </li>\n      );\n    }\n  })\n  \n  return (\n    <>\n    <ul className={(feed.length > 0 ? \"\" : \"hidden\")}>\n      {feed}\n    </ul>\n    <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\n      No administrative proceeding {message}.\n    </p>\n  </>\n    )\n}\nexport default Admin","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst InvestorAlerts = ({startDate, endDate, message}) => {\n\n  const data = useStaticQuery(graphql`\n  {\n    allFeedInvestorAlerts {\n      nodes {\n        title\n        pubDate\n        link\n        content\n      }\n    }\n  }\n`)\n\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n\n  let feed = [];\n  let nodes = data.allFeedInvestorAlerts.nodes;\n\n  nodes.forEach(function(entry, i) {\n    let entryDay = entry.pubDate.split(\" \")[1]\n    let entryMonth = entry.pubDate.split(\" \")[2]\n    let entryYear = entry.pubDate.split(\" \")[3]\n    var entryTime = entry.pubDate.split(\" \")[4]\n    var entryMinute = entryTime.split(\":\")[1]\n    var entryHour = entryTime.split(\":\")[0]\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\n  \n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \n      feed.push (\n        <li className=\"py-4\" key={entry.title + i}>\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\n          <p className=\"opacity-90\">{content}</p>\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\n        </li>\n      );\n    }\n  })\n  \n  return (\n    <>\n     <ul className={(feed.length > 0 ? \"\" : \"hidden\")}>\n        {feed}\n      </ul>\n      <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\n        No alert {message}.\n      </p>\n      </>\n    )\n}\nexport default InvestorAlerts","import React from \"react\";\nimport QR from \"/public/images/$hearer.png\"\n\nfunction Footer(props) {\n  var archives = [];\n  var archiveLinks = [\n    [\"Yesterday\", \"/yesterday\"],\n    [\"This Week\", \"/week\"],\n    [\"News\", \"/news\"],\n    [\"Speeches\", \"/speeches\"],\n    [\"Testimony\", \"/testimony\"],\n    [\"Litigation\", \"/litigation\"],\n    [\"Administrative Proceedings\", \"/admin\"],\n    [\"Trading Suspensions\", \"/tradingSuspensions\"],\n    [\"Proposed Rules\", \"/proposedRules\"],\n    [\"Corporate Finance\", \"/coporateFinance\"],\n    [\"Investor Alerts\", \"/investorAlerts\"],\n    [\"Investment Management\", \"/investorManagement\"],\n  ]\n\n  archiveLinks.forEach(function(entry, i) {\n    archives.push (\n      <li className=\"w-full 425px:w-1/2 1024px:w-1/3 mb-2\"><a className=\"hover:underline\" href={entry[1]}>{entry[0]}</a></li>\n    );\n  });\n  return (\n    <footer className=\"mt-12 pt-12\">\n      <div className=\"text-center text-navy\">\n        <h3 className=\"text-2xl\">Don't see what you are looking for?</h3>\n        <h3 className=\"text-3xl font-bold mb-8\">Dive into the archives</h3>\n      \n        <ul className=\"flex flex-wrap \">\n          {archives}\n        </ul>\n      </div>\n      <div className=\"mt-12 pt-12 opacity-25 text-sm text-center border-t border-black-25 leading-loose\">\n          <h3 className=\"text-lg pb-2 font-bold\">Fineprint / Legalese</h3>\n          <p className=\"mb-2\">This page provides a free daily list of the most recent materials posted to the SEC website. The official release date of a document may differ from the posting date so always verify the source documents. Some legacy sections do not have data feeds, the SEC has been notified and I hope they will provide a feed in the future or I will look into alternative methods of acquiring the information. Those sections include: <a className=\"font-bold hover:underline\" href=\"https://www.sec.gov/rules/other.htm\">Other Commission Orders, Notices, and Information</a>, <a className=\"font-bold hover:underline\" href=\"https://www.sec.gov/about/upcoming-events.htm\">Upcoming Events</a>\n          </p>\n          <p className=\"mb-2\">\n          Coming soon:&nbsp;<a className=\"font-bold hover:underline\" href=\"https://www.sec.gov/cgi-bin/browse-edgar?action=getcurrent\">Latest Filings</a>\n          ,&nbsp;<a className=\"font-bold hover:underline\" href=\"https://www.sec.gov/news/whatsnew/wn-archive.shtml\">Previous What’s New Issues</a>\n          ,&nbsp;<a className=\"font-bold hover:underline\" href=\"https://www.sec.gov/news/digest.shtml\">News Digest Archives (1956-2013)</a>\n          </p>\n          <p className=\"mb-8\">Missing something? Please <a className=\"font-bold hover:underline\" href=\"https://twitter.com/justinsane98\">let me know</a> and I will try to add it.</p>\n          <a className=\"inline-block w-20 opacity-50 hover:opacity-100\" href=\"https://cash.app/$hearer\"><img src={QR} alt=\"$hearer\"/></a>\n          <br/>\n          <a className=\"my-2 py-1 px-2 bg-black-10 hover:cursor-pointer hover:bg-black hover:text-white\">33o3mMHWGy6MYRB5d5QcLA8nbNhzAbKjjt</a>\n          <p className=\"my-2\">No Ads. Like my work?<br/>Please consider tipping.</p>\n        </div>\n      </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst CorporateFinance = ({startDate, endDate, message}) => {\n\n  const data = useStaticQuery(graphql`\n  {\n    allFeedCorporateFinance {\n      nodes {\n        title\n        pubDate\n        link\n        content\n      }\n    }\n  }\n`)\n\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n\n  let feed = [];\n  let nodes = data.allFeedCorporateFinance.nodes;\n\n  nodes.forEach(function(entry, i) {\n    let entryDay = entry.pubDate.split(\" \")[1]\n    let entryMonth = entry.pubDate.split(\" \")[2]\n    let entryYear = entry.pubDate.split(\" \")[3]\n    var entryTime = entry.pubDate.split(\" \")[4]\n    var entryMinute = entryTime.split(\":\")[1]\n    var entryHour = entryTime.split(\":\")[0]\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\n  \n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \n      feed.push (\n        <li className=\"py-4\" key={entry.title + i}>\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\n          <p className=\"opacity-90\">{content}</p>\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\n        </li>\n      );\n    }\n  })\n  \n  return (\n    <>\n     <ul className={(feed.length > 0 ? \"\" : \"hidden\")}>\n        {feed}\n      </ul>\n      <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\n        No news {message}.\n      </p>\n      </>\n    )\n}\nexport default CorporateFinance","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst ProposedRules = ({startDate, endDate, message}) => {\n\n  const data = useStaticQuery(graphql`\n  {\n    allFeedProposedRules {\n      nodes {\n        title\n        pubDate\n        link\n      }\n    }\n  }\n`)\n\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n\n  let feed = [];\n  let nodes = data.allFeedProposedRules.nodes;\n\n  nodes.forEach(function(entry, i) {\n    let entryDay = entry.pubDate.split(\" \")[1]\n    let entryMonth = entry.pubDate.split(\" \")[2]\n    let entryYear = entry.pubDate.split(\" \")[3]\n    var entryTime = entry.pubDate.split(\" \")[4]\n    var entryMinute = entryTime.split(\":\")[1]\n    var entryHour = entryTime.split(\":\")[0]\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\n  \n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \n      feed.push (\n        <li className=\"py-4\" key={entry.title + i}>\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\n        </li>\n      );\n    }\n  })\n  \n  return (\n    <>\n     <ul className={(feed.length > 0 ? \"\" : \"hidden\")}>\n        {feed}\n      </ul>\n      <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\n        No proposed rule {message}.\n      </p>\n      </>\n    )\n}\nexport default ProposedRules","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst News = ({startDate, endDate}) => {\n\n  const data = useStaticQuery(graphql`\n  {\n    allFeedNews {\n      nodes {\n        content\n        guid\n        pubDate\n        title\n        link\n      }\n    }\n  \n  }\n`)\n\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n  let feed = [];\n  let nodes = data.allFeedNews.nodes;\n\n  nodes.forEach(function(entry, i) {\n  let entryDay = entry.pubDate.split(\" \")[1]\n  let entryMonth = entry.pubDate.split(\" \")[2]\n  let entryYear = entry.pubDate.split(\" \")[3]\n  var entryTime = entry.pubDate.split(\" \")[4]\n  var entryMinute = entryTime.split(\":\")[1]\n  var entryHour = entryTime.split(\":\")[0]\n  var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\n  var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\n\n  if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \n    feed.push (\n      <li className=\"py-4\" key={entry.title + i}>\n        <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\n        <p className=\"opacity-90\">{content}</p>\n        <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\n      </li>\n    );\n  }\n})\n\nreturn (\n  <>\n      <section className={(feed.length > 0 ? \"\" : \"hidden\") + \" mb-12 relative \"}>\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">News</h2>\n            \n        <div className={(feed.length > 0 ? \"\" : \"hidden\")}>\n          <ul>\n            {feed}\n          </ul>\n        </div>\n\n        <div className={(feed.length > 0 ? \"\" : \"hidden\") + \" 425px:absolute top-2 right-0 text-navy\"}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> <a className=\"inline-block hover:underline\" href=\"/news\">Archives</a>\n        </div>     \n      </section>    \n\n  </>\n  )\n}\nexport default News","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Speeches = ({startDate, endDate, message}) => {\n\n  const data = useStaticQuery(graphql`\n  {\n    allFeedSpeeches {\n      nodes {\n        content\n        guid\n        pubDate\n        title\n        link\n      }\n    }\n  \n  }\n`)\n\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n\n  let feed = [];\n  let nodes = data.allFeedSpeeches.nodes;\n\n  nodes.forEach(function(entry, i) {\n  let entryDay = entry.pubDate.split(\" \")[1]\n  let entryMonth = entry.pubDate.split(\" \")[2]\n  let entryYear = entry.pubDate.split(\" \")[3]\n  var entryTime = entry.pubDate.split(\" \")[4]\n  var entryMinute = entryTime.split(\":\")[1]\n  var entryHour = entryTime.split(\":\")[0]\n  var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\n  var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\n\n  if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \n    feed.push (\n      <li className=\"py-4\" key={entry.title + i}>\n        <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\n        <p className=\"opacity-90\">{content}</p>\n        <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\n      </li>\n    );\n  }\n})\n\nreturn (\n  <>\n    <ul className={(feed.length > 0 ? \"\" : \"hidden\")}>\n      {feed}\n    </ul>\n    <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\n      No speech {message}.\n    </p>\n    </>\n  )\n}\nexport default Speeches","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Testimony = ({startDate, endDate, message}) => {\n\n  const data = useStaticQuery(graphql`\n  {\n    allFeedTestimony {\n      nodes {\n        content\n        guid\n        pubDate\n        title\n        link\n      }\n    }\n  \n  }\n`)\n\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n\n  let feed = [];\n  let nodes = data.allFeedTestimony.nodes;\n\n  nodes.forEach(function(entry, i) {\n    let entryDay = entry.pubDate.split(\" \")[1]\n    let entryMonth = entry.pubDate.split(\" \")[2]\n    let entryYear = entry.pubDate.split(\" \")[3]\n    var entryTime = entry.pubDate.split(\" \")[4]\n    var entryMinute = entryTime.split(\":\")[1]\n    var entryHour = entryTime.split(\":\")[0]\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\n  \n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \n      feed.push (\n        <li className=\"py-4\" key={entry.title + i}>\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\n          <p className=\"opacity-90\">{content}</p>\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\n        </li>\n      );\n    }\n  })\n  \n  return (\n    <>\n      <ul className={(feed.length > 0 ? \"\" : \"hidden\")}>\n        {feed}\n      </ul>\n      <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\n        No testimony {message}.\n      </p>\n    </>\n  )\n}\nexport default Testimony","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Litigation from \"./Litigation\"\nimport News from \"./News\"\nimport Speeches from \"./Speeches\"\nimport Testimony from \"./Testimony\"\nimport Statements from \"./Statements\"\nimport Admin from \"./Admin\"\nimport TradingSuspensions from \"./TradingSuspensions\"\nimport ProposedRules from \"./ProposedRules\"\nimport CorporateFinance from \"./CorporateFinance\"\nimport InvestmentManagement from \"./InvestmentManagement\"\nimport InvestorAlerts from \"./InvestorAlerts\"\n\n\nconst Feeds = ({start, end, message}) => {\nreturn (\n  <>\n  <div>\n\n  <News startDate={start} endDate={end}/> \n<Speeches startDate={start} endDate={end} message={message} />\n<Testimony startDate={start} endDate={end} message={message}/>\n  <Statements startDate={start} endDate={end}/>\n<Litigation startDate={start} endDate={end} message={message}/>\n<Admin startDate={start} endDate={end} message={message}/>\n<TradingSuspensions startDate={start} endDate={end} message={message}/>\n<ProposedRules startDate={start} endDate={end} message={message}/>\n<CorporateFinance startDate={start} endDate={end} message={message}/>\n<InvestorAlerts startDate={start} endDate={end} message={message}/>\n<InvestmentManagement startDate={start} endDate={end} message={message}/>\n\n\n        {/* \n\n        <div className=\"opacity-50 mt-12\">\n        <h2>Other Commission Orders, Notices, and Information</h2>\n        No Feed... request page and scrape data:\n        grab the table#mainlist and iterate manually\n        https://www.sec.gov/rules/other.htm\n        \n        <h2 className=\"text-lg border-b-2\">FOIA Program</h2>\n        <h2 className=\"text-lg border-b-2\">ALJ Initial Decisions</h2>\n        <h2 className=\"text-lg border-b-2\">ALJ Initial Orders</h2>\n        <h2 className=\"text-lg border-b-2\">Divisions</h2>\n        <h2 className=\"text-lg border-b-2\">Regulatory Actions</h2>\n        </div> */}\n        </div>\n    </>\n  )\n}\nexport default Feeds\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst TradingSuspensions = ({startDate, endDate, message}) => {\n\n  const data = useStaticQuery(graphql`\n  {\n    allFeedTradingSuspensions {\n      nodes {\n        title\n        pubDate\n        link\n      }\n    }\n  }\n`)\n\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n\n  let feed = [];\n  let nodes = data.allFeedTradingSuspensions.nodes;\n\n  nodes.forEach(function(entry, i) {\n    let entryDay = entry.pubDate.split(\" \")[1]\n    let entryMonth = entry.pubDate.split(\" \")[2]\n    let entryYear = entry.pubDate.split(\" \")[3]\n    var entryTime = entry.pubDate.split(\" \")[4]\n    var entryMinute = entryTime.split(\":\")[1]\n    var entryHour = entryTime.split(\":\")[0]\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\n  \n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \n      feed.push (\n        <li className=\"py-4\" key={entry.title + i}>\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\n          <p className=\"opacity-90\">{content}</p>\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\n        </li>\n      );\n    }\n  })\n  \n  return (\n    <>\n     <ul className={(feed.length > 0 ? \"\" : \"hidden\")}>\n        {feed}\n      </ul>\n      <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\n        No suspension {message}.\n      </p>\n      </>\n    )\n}\nexport default TradingSuspensions","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Litigation = ({startDate, endDate, message}) => {\n\n  const data = useStaticQuery(graphql`\n  {\n    allFeedLitigation {\n      nodes {\n        content\n        title\n        pubDate\n        link\n      }\n    }\n  }\n`)\n\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n\n  let feed = [];\n  let nodes = data.allFeedLitigation.nodes;\n\n  nodes.forEach(function(entry, i) {\n    let entryDay = entry.pubDate.split(\" \")[1]\n    let entryMonth = entry.pubDate.split(\" \")[2]\n    let entryYear = entry.pubDate.split(\" \")[3]\n    var entryTime = entry.pubDate.split(\" \")[4]\n    var entryMinute = entryTime.split(\":\")[1]\n    var entryHour = entryTime.split(\":\")[0]\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\n  \n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \n      feed.push (\n        <li className=\"py-4\" key={entry.title + i}>\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\n          <p className=\"opacity-90\">{content}</p>\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\n        </li>\n      );\n    }\n  })\n  \n  return (\n    <>\n    <ul className={(feed.length > 0 ? \"\" : \"hidden\")}>\n      {feed}\n    </ul>\n    <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\n      No litigation {message}.\n    </p>\n  </>\n    )\n}\nexport default Litigation","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Statements = ({startDate, endDate}) => {\n\n  const data = useStaticQuery(graphql`\n  {\n    allFeedStatements {\n      nodes {\n        content\n        guid\n        pubDate\n        title\n        link\n      }\n    }\n  \n  }\n`)\n\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n  let feed = [];\n  let nodes = data.allFeedStatements.nodes;\n\n  nodes.forEach(function(entry, i) {\n  let entryDay = entry.pubDate.split(\" \")[1]\n  let entryMonth = entry.pubDate.split(\" \")[2]\n  let entryYear = entry.pubDate.split(\" \")[3]\n  var entryTime = entry.pubDate.split(\" \")[4]\n  var entryMinute = entryTime.split(\":\")[1]\n  var entryHour = entryTime.split(\":\")[0]\n  var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\n  var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\n\n  if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \n    feed.push (\n      <li className=\"py-4\" key={entry.title + i}>\n        <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\n        <p className=\"opacity-90\">{content}</p>\n        <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\n      </li>\n    );\n  }\n})\n\nreturn (\n  <>\n      <section className={(feed.length > 0 ? \"\" : \"hidden\") + \" mb-12 relative \"}>\n        <h2 className=\"text-2xl border-b border-black-25 pb-2\">Public Statements</h2>\n            \n        <div className={(feed.length > 0 ? \"\" : \"hidden\")}>\n          <ul>\n            {feed}\n          </ul>\n        </div>\n\n        <div className={(feed.length > 0 ? \"\" : \"hidden\") + \" 425px:absolute top-2 right-0 text-navy\"}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 inline-block relative -top-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg> <a className=\"inline-block hover:underline\" href=\"/statements\">Archives</a>\n        </div>     \n      </section>    \n\n  </>\n  )\n}\nexport default Statements","import React from \"react\";\n\nfunction Header(props) {\n  return (\n    <header className=\"bg-navy text-center px-12 relative\">\n      <div className=\"absolute top-2 left-2 768px:left-1/4 bg-white-10 h-0.5 right-2 768px:right-1/4 w-100 z-0\"></div>\n      <div className=\"absolute top-3 left-2 768px:left-1/4 ml-1 bg-white-10 h-0.5 right-2 768px:right-1/4 mr-1 w-100 z-0\"></div>\n      <div className=\"absolute top-4 left-2 768px:left-1/4 ml-2 bg-white-10 h-0.5 right-2 768px:right-1/4 mr-2 w-100 z-0\"></div>\n      <a href=\"/\" className=\"relative inline-block bg-navy py-1 px-2 text-sm uppercase text-white-50 font-serif z-1\">Secretary of the Secretary</a>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst InvestmentManagement = ({startDate, endDate}) => {\n\n  const data = useStaticQuery(graphql`\n  {\n    allFeedInvestmentManagement {\n      nodes {\n        title\n        pubDate\n        link\n        content\n      }\n    }\n  }\n`)\n\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n\n  let feed = [];\n  let nodes = data.allFeedInvestmentManagement.nodes;\n\n  nodes.forEach(function(entry, i) {\n    let entryDay = entry.pubDate.split(\" \")[1]\n    let entryMonth = entry.pubDate.split(\" \")[2]\n    let entryYear = entry.pubDate.split(\" \")[3]\n    var entryTime = entry.pubDate.split(\" \")[4]\n    var entryMinute = entryTime.split(\":\")[1]\n    var entryHour = entryTime.split(\":\")[0]\n    var content = entry.content ? entry.content.replaceAll(\"<br />\", \" \") : \"\";\n    var entryDate = new Date(entryYear, months.findIndex(element => element.includes(entryMonth)), entryDay);\n  \n    if(entryDate.setHours(0,0,0,0) >= startDate.setHours(0,0,0,0) && entryDate.setHours(0,0,0,0) <= endDate.setHours(0,0,0,0)){ \n      feed.push (\n        <li className=\"py-4\" key={entry.title + i}>\n          <a className=\"text-large text-navy font-bold hover:underline\" href={entry.link}>{entry.title}</a>\n          <p className=\"opacity-90\">{content}</p>\n          <p className=\"text-sm opacity-25\">{entryMonth} {entryDay} {entryHour}:{entryMinute} EST</p>\n        </li>\n      );\n    }\n  })\n  \n  return (\n    <>\n     <ul className={(feed.length > 0 ? \"\" : \"hidden\")}>\n        {feed}\n      </ul>\n      <p className={(feed.length > 0 ? \"hidden\" : \"\") + \" py-4 opacity-50\"}>\n        The feed has not been updated since 2019. However, there is current news available:  <br/><a className=\"text-large text-navy font-bold hover:underline\" href=\"https://www.sec.gov/investment-management/whats-new\">https://www.sec.gov/investment-management/whats-new</a>\n      </p>\n      </>\n    )\n}\nexport default InvestmentManagement","module.exports = __webpack_public_path__ + \"static/$hearer-dbe2261036a1f867bf711a20be6c12ac.png\";"],"sourceRoot":""}